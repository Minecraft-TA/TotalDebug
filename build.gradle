buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.3'
    }
}

apply plugin: 'idea'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.github.minecraft_ta'
version = '1.6.1'
archivesBaseName = 'TotalDebug'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    mappings channel: 'stable', version: '39-1.12'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            mods {
                codedebug {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            mods {
                codedebug {
                    source sourceSets.main
                }
            }
        }
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

repositories {
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url "https://packagecloud.io/tth05/repo/maven2"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    implementation "com.github.tth05:SCNet:519b65"
    implementation "io.github.classgraph:classgraph:4.8.90"
    implementation "org.bitbucket.mstrobel:procyon-compilertools:0.5.36"
    implementation "com.github.tth05:jindex:0.0.2"

    compileOnly fg.deobf("mezz.jei:jei_1.12.2:4.16.1.302:api")
    runtimeOnly fg.deobf("mezz.jei:jei_1.12.2:4.16.1.302")

    implementation("com.github.javaparser:javaparser-symbol-solver-core:3.22.0") {
        exclude group: "com.google.guava"
    }
}

shadowJar {
    classifier ''

    relocate "com.github.javaparser", "com.github.minecraft_ta.totaldebug.shades.javaparser"
    relocate "io.github.classgraph", "com.github.minecraft_ta.totaldebug.shades.classgraph"
    relocate "nonapi.io.github.classgraph", "com.github.minecraft_ta.totaldebug.shades.nonapi"
    relocate "com.strobel", "com.github.minecraft_ta.totaldebug.shades.procyon"
    relocate "com.github.tth05.scnet", "com.github.minecraft_ta.totaldebug.shades.scnet"
    dependencies {
        exclude(dependency {
            it.moduleGroup != 'io.github.classgraph' &&
                    it.moduleGroup != 'com.github.javaparser' &&
                    it.moduleGroup != 'org.bitbucket.mstrobel' &&
                    it.moduleGroup != 'com.github.tth05'
        })
    }
}

reobf {
    shadowJar {}
}

idea { module { inheritOutputDirs = true } }
